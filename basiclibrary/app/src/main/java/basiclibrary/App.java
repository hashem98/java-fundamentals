/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.HashMap;
import java.util.Random;
import java.util.*;


public class App {
    public static void main(String[] args) {
        int[] testArr = {1,2,3,4,5};
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        int[] randomRoll = roll(6);
        boolean findDublicate = containsDuplicates(testArr);
        int avg = calculateAverage(testArr);
        int[] arrayOfAvg = avgArrOfArr(weeklyMonthTemperatures);
        System.out.println("................arrayOfAvg...............");
        for (int j = 0; j <arrayOfAvg.length ; j++) {
            System.out.println(arrayOfAvg[j]);
        }
        System.out.println("................Roll................");

        for (int i = 0; i <randomRoll.length ; i++) {
            System.out.println(randomRoll[i]);
        }
        System.out.println("...............Dublicate.................");
        System.out.println(findDublicate);
        System.out.println("................avg................");
        System.out.println(avg);
        System.out.println("................AnalyzingWeatherData................");



    }

    public static int[] roll(int n){
        int rolls[] = new int[n];

        for (int index = 0 ; index < n ; index++){
            Random rand = new Random();
            rolls[index] = rand.nextInt((6 - 1) + 1)+1;
        }

        return rolls;
    }

    public static boolean containsDuplicates(int[] arr){
        boolean flag = false;
        for (int index = 0 ; index < arr.length ; index++ ) {
            for (int j = 0 ; j < arr.length ; j++) {
                if( index != j) {
                    if(arr[j] == arr[index]){
                        flag = true;
                        break;
                    }
                }
            }
        }
        return flag;
    }

    public static int calculateAverage(int[] arr) {
        int sum = 0;
        for (int elemnt : arr
        ) {
            sum += elemnt;
        }
        return Math.floorDiv(sum, arr.length);
    }

    public static int[] avgArrOfArr(int[][] arr){
        int[] newArr = new int[arr.length];
        for (int index = 0 ; index < arr.length ; index++) {
            newArr[index] = calculateAverage(arr[index]);
        }
        return newArr;
    }
    public  HashSet AnalyzingWeatherData(int[][] arr){
        int maxValue = 0;
        HashSet<Integer> arr1 = new HashSet<>();
        HashSet result = new HashSet<>();
        int MinValue= arr[0][0];


        for(int i=0;i< arr.length;i++){
            for (int j=0;j<arr[i].length;j++){
                if (arr[i][j]>maxValue){
                    maxValue =arr[i][j];
                }
            }
        }

        for(int i=0;i< arr.length;i++){
            for (int j=0;j<arr[i].length;j++){
                if (arr[i][j]<MinValue){
                    MinValue =arr[i][j];
                }
            }
        }
        result.add("High :" +maxValue);
        result.add("Low :" +MinValue);

        for(int i=0;i< arr.length;i++){
            for (int j=0;j<arr[i].length;j++){
                arr1.add(arr[i][j]);
            }
        }

        for (int index =MinValue ;index<=maxValue;index++){
            if (!arr1.contains(index)){

                result.add("Never saw temperature: " + index);
            }


        }
//





        return result;

    }

    public  String tally(List<String> votes) {


        HashMap<Integer,String> result = new HashMap<>();
        int count = 0;
        int keyBig=0;
        for (int index =0;index<votes.size();index++){
            String person = votes.get(index);
            for (int index1 =0;index1<votes.size();index1++){
                if (votes.get(index1)==person){
                    count++;
                }
            }
            result.put(count,person);

            if(count>keyBig){
                keyBig=count;
            }
            count=0;

        }

        System.out.println(result);

        System.out.println();
        String winner = result.get(keyBig) + "  received the most votes!";



        return winner;
    }
}
